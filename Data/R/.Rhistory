data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Protobuf = "",
Mean_Elapsed_Time = c(mTimePGP,mTimePGSP,mTimePPCS,mTimePPCP),
Mean_Bytes = c(mBytesPGP,mBytesPGSP,mBytesPPCS,mBytesPPCP),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] ),
)
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Protobuf = "",
Mean_Elapsed_Time = c(mTimePGP,mTimePGSP,mTimePPCS,mTimePPCP),
Mean_Bytes = c(mBytesPGP,mBytesPGSP,mBytesPPCS,mBytesPPCP),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
JSON = "",
Mean_Elapsed_Time = c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),
Mean_Bytes= c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),
Throughput = c(stats$Throughput[13],stats$Throughput[14],stats$Throughput[15],stats$Throughput[16]),
Error = c(stats$Error[13],stats$Error[14],stats$Error[15],stats$Error[16])
)
# Display the table
kable(data, caption = "Performance Metrics for Baseline Tests")
kable(data2, caption = "Performance Metrics for Baseline Tests")
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Protobuf = "",
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
JSON = "",
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Throughput = c(stats$Throughput[13],stats$Throughput[14],stats$Throughput[15],stats$Throughput[16]),
Error = c(stats$Error[13],stats$Error[14],stats$Error[15],stats$Error[16])
)
# Display the table
kable(data, caption = "Performance Metrics for PROTOBUF Baseline Tests")
kable(data2, caption = "Performance Metrics for JSON Baseline Tests")
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Protobuf = "",
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
JSON = "",
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
Throughput = c(stats$Throughput[13],stats$Throughput[14],stats$Throughput[15],stats$Throughput[16]),
Error = c(stats$Error[13],stats$Error[14],stats$Error[15],stats$Error[16])
)
# Display the table
kable(data, caption = "Performance Metrics for PROTOBUF Baseline Tests")
kable(data2, caption = "Performance Metrics for JSON Baseline Tests")
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
Throughput = c(stats$Throughput[13],stats$Throughput[14],stats$Throughput[15],stats$Throughput[16]),
Error = c(stats$Error[13],stats$Error[14],stats$Error[15],stats$Error[16])
)
# Display the table
kable(data, caption = "Performance Metrics for PROTOBUF Baseline Tests")
kable(data2, caption = "Performance Metrics for JSON Baseline Tests")
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
Throughput = c(stats$Throughput[13],stats$Throughput[14],stats$Throughput[15],stats$Throughput[16]),
Error = c(stats$Error[13],stats$Error[14],stats$Error[15],stats$Error[16])
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Baseline Tests")
kable(data2, caption = "Performance Metrics for JSON Baseline Tests")
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
Standart_Deviation = round(c(sd(pGP$elapsed),sd(pGSP$elapsed),sd(pPCS$elapsed),sd(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
Standart_Deviation = round(c(sd(jGP$elapsed),sd(jGSP$elapsed),sd(jPCS$elapsed),sd(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
Throughput = c(stats$Throughput[13],stats$Throughput[14],stats$Throughput[15],stats$Throughput[16]),
Error = c(stats$Error[13],stats$Error[14],stats$Error[15],stats$Error[16])
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Baseline Tests")
kable(data2, caption = "Performance Metrics for JSON Baseline Tests")
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
Elapsed_Time_Standart_Deviation = round(c(sd(pGP$elapsed),sd(pGSP$elapsed),sd(pPCS$elapsed),sd(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
Bytes_Standart_Deviation = round(c(sd(pGP$bytes),sd(pGSP$bytes),sd(pPCS$bytes),sd(pPCP$bytes)),2),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
Elapsed_Time_Standart_Deviation = round(c(sd(jGP$elapsed),sd(jGSP$elapsed),sd(jPCS$elapsed),sd(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
Bytes_Standart_Deviation = round(c(sd(jGP$bytes),sd(jGSP$bytes),sd(jPCS$bytes),sd(jPCP$bytes)),2),
Throughput = c(stats$Throughput[13],stats$Throughput[14],stats$Throughput[15],stats$Throughput[16]),
Error = c(stats$Error[13],stats$Error[14],stats$Error[15],stats$Error[16])
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Baseline Tests")
kable(data2, caption = "Performance Metrics for JSON Baseline Tests")
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(pGP$elapsed),sd(pGSP$elapsed),sd(pPCS$elapsed),sd(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(pGP$bytes),sd(pGSP$bytes),sd(pPCS$bytes),sd(pPCP$bytes)),2),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(jGP$elapsed),sd(jGSP$elapsed),sd(jPCS$elapsed),sd(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(jGP$bytes),sd(jGSP$bytes),sd(jPCS$bytes),sd(jPCP$bytes)),2),
Throughput = c(stats$Throughput[13],stats$Throughput[14],stats$Throughput[15],stats$Throughput[16]),
Error = c(stats$Error[13],stats$Error[14],stats$Error[15],stats$Error[16])
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Baseline Tests")
kable(data2, caption = "Performance Metrics for JSON Baseline Tests")
library(readr)
## Global Stats
stats <- read_csv("../Stats.csv")
## Load JSON files
jGP <- read_csv("../load/json_get_plan_data.csv")
jGSP <- read_csv("../load/json_get_specific_plan_data.csv")
jPCP <- read_csv("../load/json_post_plan_data.csv")
jPCS <- read_csv("../load/json_post_subs_data.csv")
## Load Protocol Buffers files
pGP <- read_csv("../load/protobuf_get_plan_data.csv")
pGSP <- read_csv("../load/protobuf_get_specific_plan_data.csv")
pPCP <- read_csv("../load/protobuf_post_plan_data.csv")
pPCS <- read_csv("../load/protobuf_post_subs_data.csv")
#### MEAN
## MEAN Elapsed
# JSON
mTimeJGP<-mean(jGP$elapsed)
mTimeJGSP<-mean(jGSP$elapsed)
mTimeJPCP<-mean(jPCP$elapsed)
mTimeJPCS<-mean(jPCS$elapsed)
# Protobuf
mTimePGP<-mean(pGP$elapsed)
mTimePGSP<-mean(pGSP$elapsed)
mTimePPCP<-mean(pPCP$elapsed)
mTimePPCS<-mean(pPCS$elapsed)
## MEAN Bytes
# JSON
mBytesJGP<-mean(jGP$bytes)
mBytesJGSP<-mean(jGSP$bytes)
mBytesJPCP<-mean(jPCP$bytes)
mBytesJPCS<-mean(jPCS$bytes)
# Protobuf
mBytesPGP<-mean(pGP$bytes)
mBytesPGSP<-mean(pGSP$bytes)
mBytesPPCP<-mean(pPCP$bytes)
mBytesPPCS<-mean(pPCS$bytes)
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(pGP$elapsed),sd(pGSP$elapsed),sd(pPCS$elapsed),sd(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(pGP$bytes),sd(pGSP$bytes),sd(pPCS$bytes),sd(pPCP$bytes)),2),
Throughput = c(stats$Throughput[5],stats$Throughput[6],stats$Throughput[7], stats$Throughput[8]),
Error = c(stats$Error[5],stats$Error[6],stats$Error[7], stats$Error[8] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(jGP$elapsed),sd(jGSP$elapsed),sd(jPCS$elapsed),sd(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(jGP$bytes),sd(jGSP$bytes),sd(jPCS$bytes),sd(jPCP$bytes)),2),
Throughput = c(stats$Throughput[17],stats$Throughput[18],stats$Throughput[19],stats$Throughput[20]),
Error = c(stats$Error[17],stats$Error[18],stats$Error[19],stats$Error[20])
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Baseline Tests")
kable(data2, caption = "Performance Metrics for JSON Baseline Tests")
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(pGP$elapsed),sd(pGSP$elapsed),sd(pPCS$elapsed),sd(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(pGP$bytes),sd(pGSP$bytes),sd(pPCS$bytes),sd(pPCP$bytes)),2),
Throughput = c(stats$Throughput[5],stats$Throughput[6],stats$Throughput[7], stats$Throughput[8]),
Error = c(stats$Error[5],stats$Error[6],stats$Error[7], stats$Error[8] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(jGP$elapsed),sd(jGSP$elapsed),sd(jPCS$elapsed),sd(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(jGP$bytes),sd(jGSP$bytes),sd(jPCS$bytes),sd(jPCP$bytes)),2),
Throughput = c(stats$Throughput[17],stats$Throughput[18],stats$Throughput[19],stats$Throughput[20]),
Error = c(stats$Error[17],stats$Error[18],stats$Error[19],stats$Error[20])
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Load Tests")
kable(data2, caption = "Performance Metrics for JSON Load Tests")
library(readr)
## Global Stats
stats <- read_csv("../Stats.csv")
## Stress JSON files
jGP <- read_csv("../stress/json_get_plan_data.csv")
jGSP <- read_csv("../stress/json_get_specific_plan_data.csv")
jPCP <- read_csv("../stress/json_post_plan_data.csv")
jPCS <- read_csv("../stress/json_post_subs_data.csv")
## Stress Protocol Buffers files
pGP <- read_csv("../stress/protobuf_get_plan_data.csv")
pGSP <- read_csv("../stress/protobuf_get_specific_plan_data.csv")
pPCP <- read_csv("../stress/protobuf_post_plan_data.csv")
pPCS <- read_csv("../stress/protobuf_post_subs_data.csv")
#### MEAN
## MEAN Elapsed
# JSON
mTimeJGP<-mean(jGP$elapsed)
mTimeJGSP<-mean(jGSP$elapsed)
mTimeJPCP<-mean(jPCP$elapsed)
mTimeJPCS<-mean(jPCS$elapsed)
# Protobuf
mTimePGP<-mean(pGP$elapsed)
mTimePGSP<-mean(pGSP$elapsed)
mTimePPCP<-mean(pPCP$elapsed)
mTimePPCS<-mean(pPCS$elapsed)
## MEAN Bytes
# JSON
mBytesJGP<-mean(jGP$bytes)
mBytesJGSP<-mean(jGSP$bytes)
mBytesJPCP<-mean(jPCP$bytes)
mBytesJPCS<-mean(jPCS$bytes)
# Protobuf
mBytesPGP<-mean(pGP$bytes)
mBytesPGSP<-mean(pGSP$bytes)
mBytesPPCP<-mean(pPCP$bytes)
mBytesPPCS<-mean(pPCS$bytes)
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(pGP$elapsed),sd(pGSP$elapsed),sd(pPCS$elapsed),sd(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(pGP$bytes),sd(pGSP$bytes),sd(pPCS$bytes),sd(pPCP$bytes)),2),
Throughput = c(stats$Throughput[9],stats$Throughput[10],stats$Throughput[11], stats$Throughput[12]),
Error = c(stats$Error[9],stats$Error[10],stats$Error[11], stats$Error[12] )
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(jGP$elapsed),sd(jGSP$elapsed),sd(jPCS$elapsed),sd(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(jGP$bytes),sd(jGSP$bytes),sd(jPCS$bytes),sd(jPCP$bytes)),2),
Throughput = c(stats$Throughput[21],stats$Throughput[22],stats$Throughput[23],stats$Throughput[24]),
Error = c(stats$Error[21],stats$Error[22],stats$Error[23],stats$Error[24])
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Stress Tests")
kable(data2, caption = "Performance Metrics for JSON Stress Tests")
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(pGP$elapsed),sd(pGSP$elapsed),sd(pPCS$elapsed),sd(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(pGP$bytes),sd(pGSP$bytes),sd(pPCS$bytes),sd(pPCP$bytes)),2),
Throughput = c(stats$Throughput[9],stats$Throughput[10],stats$Throughput[11], stats$Throughput[12]),
Error = c(stats$Error[9],stats$Error[10],stats$Error[11], stats$Error[12] ),
Samples = c(nrow(pGP),nrow(pGSP),nrow(pPCS),nrow(pPCP))
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(jGP$elapsed),sd(jGSP$elapsed),sd(jPCS$elapsed),sd(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(jGP$bytes),sd(jGSP$bytes),sd(jPCS$bytes),sd(jPCP$bytes)),2),
Throughput = c(stats$Throughput[21],stats$Throughput[22],stats$Throughput[23],stats$Throughput[24]),
Error = c(stats$Error[21],stats$Error[22],stats$Error[23],stats$Error[24]),
Samples = c(nrow(jGP),nrow(jGSP),nrow(jPCS),nrow(jPCP))
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Stress Tests")
kable(data2, caption = "Performance Metrics for JSON Stress Tests")
library(readr)
## Global Stats
stats <- read_csv("../Stats.csv")
## Load JSON files
jGP <- read_csv("../baseline/json_get_plan_data.csv")
jGSP <- read_csv("../baseline/json_get_specific_plan_data.csv")
jPCP <- read_csv("../baseline/json_post_plan_data.csv")
jPCS <- read_csv("../baseline/json_post_subs_data.csv")
## Load Protocol Buffers files
pGP <- read_csv("../baseline/protobuf_get_plan_data.csv")
pGSP <- read_csv("../baseline/protobuf_get_specific_plan_data.csv")
pPCP <- read_csv("../baseline/protobuf_post_plan_data.csv")
pPCS <- read_csv("../baseline/protobuf_post_subs_data.csv")
#### MEAN
## MEAN Elapsed
# JSON
mTimeJGP<-mean(jGP$elapsed)
mTimeJGSP<-mean(jGSP$elapsed)
mTimeJPCP<-mean(jPCP$elapsed)
mTimeJPCS<-mean(jPCS$elapsed)
# Protobuf
mTimePGP<-mean(pGP$elapsed)
mTimePGSP<-mean(pGSP$elapsed)
mTimePPCP<-mean(pPCP$elapsed)
mTimePPCS<-mean(pPCS$elapsed)
## MEAN Bytes
# JSON
mBytesJGP<-mean(jGP$bytes)
mBytesJGSP<-mean(jGSP$bytes)
mBytesJPCP<-mean(jPCP$bytes)
mBytesJPCS<-mean(jPCS$bytes)
# Protobuf
mBytesPGP<-mean(pGP$bytes)
mBytesPGSP<-mean(pGSP$bytes)
mBytesPPCP<-mean(pPCP$bytes)
mBytesPPCS<-mean(pPCS$bytes)
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(pGP$elapsed),sd(pGSP$elapsed),sd(pPCS$elapsed),sd(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(pGP$bytes),sd(pGSP$bytes),sd(pPCS$bytes),sd(pPCP$bytes)),2),
Throughput = c(stats$Throughput[1],stats$Throughput[2],stats$Throughput[3], stats$Throughput[4]),
Error = c(stats$Error[1],stats$Error[2],stats$Error[3], stats$Error[4] ),
Samples = c(nrow(pGP),nrow(pGSP),nrow(pPCS),nrow(pPCP))
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(jGP$elapsed),sd(jGSP$elapsed),sd(jPCS$elapsed),sd(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(jGP$bytes),sd(jGSP$bytes),sd(jPCS$bytes),sd(jPCP$bytes)),2),
Throughput = c(stats$Throughput[13],stats$Throughput[14],stats$Throughput[15],stats$Throughput[16]),
Error = c(stats$Error[13],stats$Error[14],stats$Error[15],stats$Error[16]),
Samples = c(nrow(jGP),nrow(jGSP),nrow(jPCS),nrow(jPCP))
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Baseline Tests")
kable(data2, caption = "Performance Metrics for JSON Baseline Tests")
library(readr)
## Global Stats
stats <- read_csv("../Stats.csv")
## Load JSON files
jGP <- read_csv("../load/json_get_plan_data.csv")
jGSP <- read_csv("../load/json_get_specific_plan_data.csv")
jPCP <- read_csv("../load/json_post_plan_data.csv")
jPCS <- read_csv("../load/json_post_subs_data.csv")
## Load Protocol Buffers files
pGP <- read_csv("../load/protobuf_get_plan_data.csv")
pGSP <- read_csv("../load/protobuf_get_specific_plan_data.csv")
pPCP <- read_csv("../load/protobuf_post_plan_data.csv")
pPCS <- read_csv("../load/protobuf_post_subs_data.csv")
#### MEAN
## MEAN Elapsed
# JSON
mTimeJGP<-mean(jGP$elapsed)
mTimeJGSP<-mean(jGSP$elapsed)
mTimeJPCP<-mean(jPCP$elapsed)
mTimeJPCS<-mean(jPCS$elapsed)
# Protobuf
mTimePGP<-mean(pGP$elapsed)
mTimePGSP<-mean(pGSP$elapsed)
mTimePPCP<-mean(pPCP$elapsed)
mTimePPCS<-mean(pPCS$elapsed)
## MEAN Bytes
# JSON
mBytesJGP<-mean(jGP$bytes)
mBytesJGSP<-mean(jGSP$bytes)
mBytesJPCP<-mean(jPCP$bytes)
mBytesJPCS<-mean(jPCS$bytes)
# Protobuf
mBytesPGP<-mean(pGP$bytes)
mBytesPGSP<-mean(pGSP$bytes)
mBytesPPCP<-mean(pPCP$bytes)
mBytesPPCS<-mean(pPCS$bytes)
library(knitr)
# Sample data
data <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = c(round(mTimePGP,2),round(mTimePGSP,2),round(mTimePPCS,2),round(mTimePPCP,2)),
Median_Elapsed_Time = round(c(median(pGP$elapsed),median(pGSP$elapsed),median(pPCS$elapsed),median(pPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(pGP$elapsed),sd(pGSP$elapsed),sd(pPCS$elapsed),sd(pPCP$elapsed)),2),
Mean_Bytes = c(round(mBytesPGP,2),round(mBytesPGSP,2),round(mBytesPPCS,2),round(mBytesPPCS,2)),
Median_Bytes = round(c(median(pGP$bytes),median(pGSP$bytes),median(pPCS$bytes),median(pPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(pGP$bytes),sd(pGSP$bytes),sd(pPCS$bytes),sd(pPCP$bytes)),2),
Throughput = c(stats$Throughput[5],stats$Throughput[6],stats$Throughput[7], stats$Throughput[8]),
Error = c(stats$Error[5],stats$Error[6],stats$Error[7], stats$Error[8] ),
Samples = c(nrow(pGP),nrow(pGSP),nrow(pPCS),nrow(pPCP))
)
data2 <- data.frame(
Endpoint = c("GET Plan","GET Specific Plan", "POST Subscriber", "POST Plan"),
Mean_Elapsed_Time = round(c(mTimeJGP,mTimeJGSP,mTimeJPCS,mTimeJPCP),2),
Median_Elapsed_Time = round(c(median(jGP$elapsed),median(jGSP$elapsed),median(jPCS$elapsed),median(jPCP$elapsed)),2),
#Elapsed_Time_Standart_Deviation = round(c(sd(jGP$elapsed),sd(jGSP$elapsed),sd(jPCS$elapsed),sd(jPCP$elapsed)),2),
Mean_Bytes= round(c(mBytesJGP,mBytesJGSP,mBytesJPCS,mBytesJPCP),2),
Median_Bytes = round(c(median(jGP$bytes),median(jGSP$bytes),median(jPCS$bytes),median(jPCP$bytes)),2),
#Bytes_Standart_Deviation = round(c(sd(jGP$bytes),sd(jGSP$bytes),sd(jPCS$bytes),sd(jPCP$bytes)),2),
Throughput = c(stats$Throughput[17],stats$Throughput[18],stats$Throughput[19],stats$Throughput[20]),
Error = c(stats$Error[17],stats$Error[18],stats$Error[19],stats$Error[20]),
Samples = c(nrow(jGP),nrow(jGSP),nrow(jPCS),nrow(jPCP))
)
# Display the table
kable(data, caption = "Performance Metrics for Protobuf Load Tests")
kable(data2, caption = "Performance Metrics for JSON Load Tests")
