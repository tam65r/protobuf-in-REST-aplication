library(readr)
jsonGetPlanData <- read_csv("./json_get_plan_data.csv")
library(readr)
jsonGetPlanData <- read_csv("../json_get_plan_data.csv")
View(jsonGetPlanData)
library(readr)
## Load JSON files
jsonGetPlanData <- read_csv("../json_get_plan_data.csv")
View(jsonGetPlanData)
jsonGetSpecificPlanData <- read_csv("../json_get_specific_plan_data.csv")
View(jsonGetPlanData)
jsonGetSpecificPlanDataV2 <- read_csv("../json_get_specific_plan_data_v2.csv")
View(jsonGetPlanData)
jsonPostCreatePlanData <- read_csv("../json_post_create_plan_data.csv")
View(jsonGetPlanData)
jsonPostCreateSubscriberData <- read_csv("../json_post_create_subscriber_data.csv")
View(jsonGetPlanData)
## Load Protocol Buffers files
protobufGetPlanData <- read_csv("../protobuf_get_plan_data.csv")
View(jsonGetPlanData)
protobufGetSpecificPlanData <- read_csv("../protobuf_get_specific_plan_data.csv")
View(jsonGetPlanData)
protobufGetSpecificPlanDataV2 <- read_csv("../protobuf_get_specific_plan_data_v2.csv")
View(jsonGetPlanData)
protobufPostCreatePlanData <- read_csv("../protobuf_post_create_plan_data.csv")
View(jsonGetPlanData)
protobufPostCreateSubscriberData <- read_csv("../protobuf_post_create_subscriber_data.csv")
View(jsonGetPlanData)
View(jsonGetPlanData)
View(jsonGetPlanData)
View(jsonGetPlanData)
View(jsonPostCreateSubscriberData)
View(protobufPostCreateSubscriberData)
# JSON
meanJsonGetPlanData<-mean(jsonGetPlanData$elapsed)
meanJsonGetSpecificPlanData<-mean(jsonGetSpecificPlanData$elapsed)
meanJsonGetSpecificPlanDataV2<-mean(jsonGetSpecificPlanDataV2$elapsed)
meanJsonPostCreatePlanData<-mean(jsonPostCreatePlanData$elapsed)
meanJsonPostCreateSubscriberData<-mean(jsonPostCreateSubscriberData$elapsed)
# Protobuf
meanProtobufGetPlanData<-mean(protobufGetPlanData$elapsed)
meanProtobufGetSpecificPlanData<-mean(protobufGetSpecificPlanData$elapsed)
meanProtobufGetSpecificPlanDataV2<-mean(protobufGetSpecificPlanDataV2$elapsed)
meanProtobufPostCreatePlanData<-mean(protobufPostCreatePlanData$elapsed)
meanProtobufPostCreateSubscriberData<-mean(protobufPostCreateSubscriberData$elapsed)
# JSON
max(jsonGetPlanData$elapsed)
max(jsonGetSpecificPlanData$elapsed)
max(jsonGetSpecificPlanDataV2$elapsed)
max(jsonPostCreatePlanData$elapsed)
max(jsonPostCreateSubscriberData$elapsed)
# Protobuf
max(protobufGetPlanData$elapsed)
max(protobufGetSpecificPlanData$elapsed)
max(protobufGetSpecificPlanDataV2$elapsed)
max(protobufPostCreatePlanData$elapsed)
max(protobufPostCreateSubscriberData$elapsed)
## Calculate MIN for every data
# JSON
min(jsonGetPlanData$elapsed)
min(jsonGetSpecificPlanData$elapsed)
min(jsonGetSpecificPlanDataV2$elapsed)
min(jsonPostCreatePlanData$elapsed)
min(jsonPostCreateSubscriberData$elapsed)
# Protobuf
min(protobufGetPlanData$elapsed)
min(protobufGetSpecificPlanData$elapsed)
min(protobufGetSpecificPlanDataV2$elapsed)
min(protobufPostCreatePlanData$elapsed)
min(protobufPostCreateSubscriberData$elapsed)
#GRÁFICO DE BARRAS
#POST-Average
dados <- c(meanProtobufGetPlanData, meanJsonGetPlanData)
categorias <- c("gRPC", "REST")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 100))
# Adicionar números acima das barras
text(x = grafico, y = dados + 50, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
#GRÁFICO DE BARRAS
#POST-Average
dados <- c(meanProtobufGetPlanData, meanJsonGetPlanData)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 100))
# Adicionar números acima das barras
text(x = grafico, y = dados + 50, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
#GRÁFICO DE BARRAS
#get Specific Plan Data
dados <- c(meanProtobufGetSpecificPlanData, meanJsonSpecificGetPlanData)
#GRÁFICO DE BARRAS
#get Specific Plan Data
dados <- c(meanProtobufGetSpecificPlanData, meanJsonGetSpecificPlanData)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 100))
# Adicionar números acima das barras
text(x = grafico, y = dados + 50, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
#GRÁFICO DE BARRAS
#get Specific Plan Data
dados <- c(meanProtobufGetSpecificPlanData, meanJsonGetSpecificPlanData)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 100))
# Adicionar números acima das barras
text(x = grafico, y = dados + 70, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
#GRÁFICO DE BARRAS
#get Specific Plan Data
dados <- c(meanProtobufGetSpecificPlanData, meanJsonGetSpecificPlanData)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 100))
# Adicionar números acima das barras
text(x = grafico, y = dados + 10, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
#GRÁFICO DE BARRAS
#get Specific Plan Data V2
dados <- c(meanProtobufGetSpecificPlanDataV2, meanJsonGetSpecificPlanDataV2)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 100))
# Adicionar números acima das barras
text(x = grafico, y = dados + 10, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
#GRÁFICO DE BARRAS
#get Specific Plan Data V2
dados <- c(meanProtobufGetSpecificPlanDataV2, meanJsonGetSpecificPlanDataV2)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 250))
# Adicionar números acima das barras
text(x = grafico, y = dados + 10, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
#GRÁFICO DE BARRAS
#get Specific Plan Data V2
dados <- c(meanProtobufGetSpecificPlanDataV2, meanJsonGetSpecificPlanDataV2)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 1000))
# Adicionar números acima das barras
text(x = grafico, y = dados + 10, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
#GRÁFICO DE BARRAS
#get Specific Plan Data V2
dados <- c(meanProtobufGetSpecificPlanDataV2, meanJsonGetSpecificPlanDataV2)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 2000))
# Adicionar números acima das barras
text(x = grafico, y = dados + 10, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
View(protobufPostCreatePlanData)
View(protobufPostCreatePlanData)
View(jsonGetSpecificPlanDataV2)
dados <- c(meanProtobufPostCreatePlanData, meanJsonPostCreatePlanData)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 2000))
# Adicionar números acima das barras
text(x = grafico, y = dados + 10, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
dados <- c(meanProtobufPostCreatePlanData, meanJsonPostCreatePlanData)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 100))
# Adicionar números acima das barras
text(x = grafico, y = dados + 10, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
#GRÁFICO DE BARRAS
#POST Create user Data
dados <- c(meanProtobufPostCreateSubscriberData, meanJsonPostCreateSubscriberData)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 2000))
# Adicionar números acima das barras
text(x = grafico, y = dados + 10, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
View(jsonPostCreatePlanData)
meanBytesProtobufGetSpecificPlanData<-mean(protobufGetSpecificPlanData$bytes)
meanBytesJsonGetSpecificPlanData<-mean(jsonGetSpecificPlanData$bytes)
dados <- c(meanBytesProtobufGetSpecificPlanData, meanBytesJsonGetSpecificPlanData)
categorias <- c("Protocol Buffers", "JSON")
# Cores para as barras
cores <- c("red", "cyan")
# Criar o gráfico de barras com cores diferentes
grafico <- barplot(dados, names.arg = categorias, xlab = "Média", ylab = "Tempo de Resposta (ms)", col = cores,ylim = c(0, max(dados) + 2000))
# Adicionar números acima das barras
text(x = grafico, y = dados + 10, labels = dados, pos = 3, col = "black")
# Adicionar legenda
legend("topright", legend = categorias, fill = cores)
